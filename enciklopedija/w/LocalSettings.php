<?php
# This file was automatically generated by the MediaWiki 1.18.1
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# http://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}

## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;
#$wgRCMaxAge=40000;

$wgSitename      = "Enciklopedija Lietuvai ir Pasauliui (ELIP)";
$wgMetaNamespace = "Enciklopedija";

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs please see:
## http://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath       = "/w";
$wgScriptExtension  = ".php";
$wgArticlePath = '/wiki/$1';
$wgUsePathInfo = true;

## The protocol and server name to use in fully-qualified URLs
$wgServer           = "http://lietuvai.lt";
$wgCanonicalServer           = "http://lietuvai.lt";
$wgEnableCanonicalServerLink = true;
$wgSend404Code = false;

## The relative URL path to the skins directory
$wgStylePath        = "$wgScriptPath/skins";

## The relative URL path to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogo             = "http://lietuvai.lt/w/images/b/bc/Wiki.png";

## UPO means: this is also a user preference option

$wgEnableEmail      = true;
$wgEnableUserEmail  = true; # UPO

$wgEmergencyContact = "elip@lietuvai.lt";
$wgPasswordSender   = "elip@lietuvai.lt";
$wgUserEmailUseReplayTo = true;

$wgEnotifUserTalk      = true; # UPO
$wgEnotifWatchlist     = true; # UPO
$wgEmailAuthentication = true;

## Database settings
#$wgDBtype           = "mysql";
#$wgDBserver         = "localhost";
$wgDBname           = "enciklopedija";
#$wgDBuser           = "vartotojas";
#$wgDBpassword       = "AbC123";
$wgDBadminuser          = "vartotojas";
$wgDBadminpassword      = "AbC123";
$wgDBservers = array(
         array(
                 'host' => "mysql.lietuvai.lt",
                 'dbname' => "enciklopedija",
                 'user' => "vartotojas",
                 'password' => "AbC123",
                 'type' => "mysql",
                 'flags' => DBO_DEFAULT,
                 'load' => 0,
         ),
#         array(
#                 'host' => "172.31.106.12",
#                 'dbname' => "enciklopedija",
#                 'user' => "vartotojas",
#                 'password' => "AbC123",
#                 'type' => "mysql",
#                 'flags' => DBO_DEFAULT,
#                 'load' => 1,
#         ),
);

# MySQL specific settings
$wgDBprefix         = "enc";
$wgCookiePrefix = "Enciklopedija";
$wgCachePrefix = "Enciklopedija";

# MySQL table options to use during installation or update
$wgDBTableOptions   = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

# Experimental charset support for MySQL 4.1/5.0.
$wgDBmysql5 = false;

## Shared memory settings
#$wgMainCacheType = CACHE_ACCEL; 
#$wgMessageCacheType = CACHE_ACCEL;
#$wgParserCacheType = CACHE_ACCEL;
#$wgMainCacheType = CACHE_ANYTHING;
#$wgMainCacheType = CACHE_DB;
#$wgTmpDirectory=
#$wgMainCacheType = CACHE_NONE;
#$wgMainCacheType    = CACHE_MEMCACHED;
#$wgMemCachedServers = array( '127.0.0.1:11211' );
#$wgMemCachedServers = array();
$wgMainCacheType    = CACHE_MEMCACHED;
$wgMemCachedServers = array( "127.0.0.1:11211" );
$wgParserCacheType = CACHE_MEMCACHED;
$wgMessageCacheType = CACHE_MEMCACHED;
$wgSessionsInMemcached = true;

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads  = true;
$wgMaxUploadSize=1024*1024*1024;
$wgUseImageMagick = true;
$wgImageMagickConvertCommand = "/usr/bin/convert";
$wgSVGConverterPath = "/usr/bin";
#$wgThumbnailEpoch='20120920000000';
$wgUseImageResize = true;
$wgAllowTitlesInSVG = true;
$wgSVGConverter = 'ImageMagick';
$wgMaxShellMemory = 13056000;
$wgSVGConverters['ImageMagick'] = '"' . $wgImageMagickConvertCommand . '" -background white -thumbnail $widthx$height^! $input PNG:$output';

# InstantCommons allows wiki to use images from http://commons.wikimedia.org
$wgUseInstantCommons  = true;
#$wgForeignFileRepos[] = array(
#   'class'     => 'ForeignAPIRepo',
#   'name'      => 'commonswiki',
#   'apibase'   => 'https://commons.wikimedia.org/w/api.php',
#   'hashLevels'=> 2,
#   'fetchDescription' => true,
#   'descBaseUrl'      => "http://lituapedija.net/le/Vaizdas:",
#   'thumbScriptUrl'   => "http://lituapedija.net/w2/thumb.php",
#   'scriptDirUrl'     => "http://lituapedija.net/w2",
#   'descriptionCacheExpiry' => 43200,
#   'apiThumbCacheExpiry'    => 86400,
#
#
#);
$wgForeignFileRepos[] = array(
   'class'     => 'ForeignAPIRepo',
   'name'      => 'ltwiki',
   'apibase'   => 'https://lt.wikipedia.org/w/api.php',
   'hashLevels'=> 2,
   'fetchDescription' => true,
#   'descBaseUrl'      => "http://lituapedija.net/le/Vaizdas:",
#   'thumbScriptUrl'   => "http://lituapedija.net/w2/thumb.php",
#   'scriptDirUrl'     => "http://lituapedija.net/w2",
   'descriptionCacheExpiry' => 43200,
   'apiThumbCacheExpiry'    => 86400,

);

#$wgForeignFileRepos[] = array(
#   'class'     => 'ForeignAPIRepo',
#   'name'      => 'lituapedija',
#   'apibase'   => 'http://lituapedija.net/w2/api.php',
#   'hashLevels'=> 2,
#   'fetchDescription' => true,
#   'descBaseUrl'      => "http://lituapedija.net/le/Vaizdas:",
#   'thumbScriptUrl'   => "http://lituapedija.net/w2/thumb.php",
#   'scriptDirUrl'     => "http://lituapedija.net/w2",
#   'descriptionCacheExpiry' => 43200,
#   'apiThumbCacheExpiry'    => 86400,
#
#);
#$wgForeignFileRepos[] = array(
#   'class'     => 'ForeignAPIRepo',
#   'name'      => 'knyga',
#   'apibase'   => 'http://knyga.lietuvai.lt/w/api.php',
#   'hashLevels'=> 2,
#   'fetchDescription' => true,
#   'descBaseUrl'      => "http://lituapedija.net/le/Vaizdas:",
#   'thumbScriptUrl'   => "http://lituapedija.net/w2/thumb.php",
#   'scriptDirUrl'     => "http://lituapedija.net/w2",
#   'descriptionCacheExpiry' => 43200,
#   'apiThumbCacheExpiry'    => 86400,
#
#);

## If you use ImageMagick (or any other shell command) on a
## Linux server, this will need to be set to the name of an
## available UTF-8 locale
$wgShellLocale = "en_US.utf8";
$defaultDateFormat = 'ymd';

## If you want to use image uploads under safe mode,
## create the directories images/archive, images/thumb and
## images/temp, and make them all writable. Then uncomment
## this, if it's not already uncommented:
#$wgHashedUploadDirectory = false;

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publically accessible from the web.
$wgCacheDirectory = "$IP/cache";
$wgUseFileCache = true; /* default: false */
$wgFileCacheDirectory = "$IP/cache";
$wgShowIPinHeader = false;
$wgUseGzip= true;
$wgEnableSidebarCache = true;
$wgInvalidateCacheOnLocalSettingsChange = true;
 
# Site language code, should be one of the list in ./languages/Names.php
$wgLanguageCode = "lt";
$wgContLang = "lt";
$wgContLanguageCode = "lt";
$wgDefaultUserOptions['date'] = "ymd";

$wgSecretKey = "ec94301f2dcda4de6d81504923463ac89c04eeb6a26aedfd3b33820305f55975";

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$wgUpgradeKey = "ee8acb1a77fd0360";

## Default skin: you can change the default skin. Use the internal symbolic
## names, ie 'standard', 'nostalgia', 'cologneblue', 'monobook', 'vector':
require_once( "$IP/skins/foreground/foreground.php" );
require_once( "$IP/skins/Metrolook/Metrolook.php" );
#require_once("$IP/skins/apex/apex.php");
#if (preg_match("/(mobile|webos|opera mini)/i", $_SERVER['HTTP_USER_AGENT'])) {
#  $wgDefaultSkin = "foreground";
#} else {
  $wgDefaultSkin = "vector";
#}
#require_once( "$IP/skins/foreground/foreground.php" );

#$wgDefaultSkin = "foreground";
$wgForegroundFeatures = array(      
  'showActionsForAnon' => true,
  'NavWrapperType' => 'divonly',
  'showHelpUnderTools' => true,
  'showRecentChangesUnderTools' => true,
  'wikiName' => &$GLOBALS['wgSitename'],
  'navbarIcon' => true,
  'IeEdgeCode' => 1,
  'showFooterIcons' => 0,
  'addThisFollowPUBID' => ''
);

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl  = "http://creativecommons.org/licenses/by-sa/3.0/";
$wgRightsText = "Creative Commons Attribution Share Alike";
$wgRightsIcon = "{$wgStylePath}/common/images/cc-by-sa.png";
# $wgRightsCode = ""; # Not yet used

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "/usr/bin/diff3";

# Query string length limit for ResourceLoader. You should only set this if
# your web server has a query string length limit (then set it to that limit),
# or if you have suhosin.get.max_value_length set in php.ini (then set it to
# that value)
$wgResourceLoaderMaxQueryLength = -1;

# The following permissions were set based on your choice in the installer
$wgGroupPermissions['*']['createaccount'] = false;
$wgGroupPermissions['*']['createpage'] = false;
$wgGroupPermissions['*']['edit'] = false;

# Enabled Extensions. Most extensions are enabled by including the base extension file here
# but check specific extension documentation for more details
# The following extensions were automatically enabled:
require_once( "$IP/extensions/ConfirmEdit/ConfirmEdit.php" );
require_once( "$IP/extensions/Gadgets/Gadgets.php" );
require_once( "$IP/extensions/ParserFunctions/ParserFunctions.php" );
require_once( "$IP/extensions/Vector/Vector.php" );
require_once( "$IP/extensions/Renameuser/Renameuser.php" );
require_once( "$IP/extensions/WikiEditor/WikiEditor.php" );
require_once( "$IP/extensions/Nuke/Nuke.php" );

# End of automatically generated settings.
# Add more configuration options below.

# Editor toolbar WikiEditor
$wgDefaultUserOptions['usebetatoolbar'] = 1;
$wgDefaultUserOptions['usebetatoolbar-cgd'] = 1;
$wgDefaultUserOptions['wikieditor-preview'] = 1;

# Extension:Vector
$wgDefaultUserOptions['useeditwarning'] = 1;
$wgVectorFeatures['editwarning']['user'] = true;
$wgVectorFeatures['collapsibletabs']['user'] = true;
$wgVectorFeatures['collapsiblenav']['user'] = true;
#$wgVectorFeatures['expandablesearch']['user'] = true;

require_once("{$IP}/extensions/Slideshow/slideshow.php");
require_once("$IP/extensions/intersection/DynamicPageList.php");
require_once( "$IP/extensions/DPLforum/DPLforum.php" );

require_once("$IP/extensions/InputBox/InputBox.php");
$wgUseAjax = true;

require_once("$IP/extensions/CategoryTree/CategoryTree.php");
$wgUseAjax = true;

require_once("$IP/extensions/CharInsert/CharInsert.php");
require_once("$IP/extensions/Cite/Cite.php");
require_once("$IP/extensions/Cite/SpecialCite.php");
$wgCiteEnablePopups = true;
require_once("$IP/extensions/ImageMap/ImageMap.php");
require_once("$IP/extensions/LiquidThreads/LiquidThreads.php");

require_once( "$IP/extensions/MiniMp3/MiniMp3.php");
require_once("$IP/extensions/PdfHandler/PdfHandler.php");
$wgPdfProcessor = '/usr/bin/gs';
$wgPdfPostProcessor = $wgImageMagickConvertCommand;
$wgPdfInfo = '/usr/bin/pdfinfo';
$wgPdftoText = '/usr/bin/pdftotext';
$wgFileExtensions[] = 'svg';
$wgFileExtensions[] = 'pdf';
#$wgPdfCreateThumbnailsInJobQueue=true;
#$wgPdfHandlerDpi = 300;
$wgThumbnailScriptPath = "{$wgScriptPath}/thumb.php";
#$wgThumbnailScriptPath = "{$wgScriptPath}/thumb{$wgScriptExtension}";

require_once ("$IP/extensions/StringFunctions/StringFunctions.php");
require_once("$IP/extensions/ApiSandbox/ApiSandbox.php");

require_once("$IP/extensions/TitleKey/TitleKey.php");
$wgEnableMWSuggest = true;
$wgEnableOpenSearchSuggest=true;

require_once( "$IP/extensions/DataValues/DataValues.php" );
#require_once( "$IP/extensions/semantic-bundle/SemanticBundleSettings.php" );
#require_once( "$IP/extensions/semantic-bundle/SemanticBundle.php" );

# Semantic MediaWiki basic installation.
# More info: http://semantic-mediawiki.org/wiki/Help:Installation
include_once( "$IP/extensions/Validator/Validator.php" );
include_once( "$IP/extensions/SemanticMediaWiki/SemanticMediaWiki.php" );
enableSemantics( parse_url( $wgServer, PHP_URL_HOST ) );

# Semantic Result Formats
# More info: http://semantic-mediawiki.org/wiki/Help:Semantic_Result_Formats#Installation
include_once( "$IP/extensions/SemanticResultFormats/SemanticResultFormats.php" );

# Header Tabs
# More info: http://www.mediawiki.org/wiki/Extension:Header_Tabs#Installation 
include_once( "$IP/extensions/HeaderTabs/HeaderTabs.php" );
$htEditTabLink = true;

# Semantic Forms
# More info: http://www.mediawiki.org/wiki/Extension:Semantic_Forms
include_once( "$IP/extensions/SemanticForms/SemanticForms.php" );

$sfgCacheFormDefinitions = true;

# Semantic Forms Inputs
# More info: http://www.mediawiki.org/wiki/Extension:Semantic_Forms_Inputs
include_once( "$IP/extensions/SemanticFormsInputs/SemanticFormsInputs.php" );

# Semantic Compound Queries
# More info: http://www.mediawiki.org/wiki/Extension:Semantic_Compound_Queries
include_once( "$IP/extensions/SemanticCompoundQueries/SemanticCompoundQueries.php" );

# Semantic Drilldown
# More info: http://www.mediawiki.org/wiki/Extension:Semantic_Drilldown#Installation
include_once( "$IP/extensions/SemanticDrilldown/SemanticDrilldown.php" );

# Maps and Semantic Maps 
# If you're planning to use Google Maps or Yahoo! Maps, you should also set
# $egGoogleMapsKey or $egYahooMapsKey (AFTER the include_once statements).
# More info:
# http://mapping.referata.com/wiki/Maps#Installation
# http://mapping.referata.com/wiki/Semantic_Maps#Installation
include_once( "$IP/extensions/Maps/Maps.php" );
include_once( "$IP/extensions/SemanticMaps/SemanticMaps.php" );

# Semantic Tasks
# More info: http://www.mediawiki.org/wiki/Extension:Semantic_Tasks#Installation
#include_once( "$IP/extensions/SemanticTasks/SemanticTasks.php" );

# Semantic Internal Objects
# More info: http://www.mediawiki.org/wiki/Extension:Semantic_Internal_Objects
include_once( "$IP/extensions/SemanticInternalObjects/SemanticInternalObjects.php" );

# Semantic Image Input
# More info: http://www.mediawiki.org/wiki/Extension:Semantic_Image_Input
#include_once( "$IP/extensions/SemanticImageInput/SemanticImageInput.php" );

# Admin Links
# More info: http://www.mediawiki.org/wiki/Extension:Admin_Links#Installation
include_once( "$IP/extensions/AdminLinks/AdminLinks.php" );

# Approved Revs
# More info: http://www.mediawiki.org/wiki/Extension:Approved_Revs#Installation
#include_once( "$IP/extensions/ApprovedRevs/ApprovedRevs.php" );

# Arrays
# More info: http://www.mediawiki.org/wiki/Extension:Arrays#Installation
include_once( "$IP/extensions/Arrays/Arrays.php" );

# Data Transfer
# More info: http://www.mediawiki.org/wiki/Extension:Data_Transfer#Installation
include_once( "$IP/extensions/DataTransfer/DataTransfer.php" );

# External Data
# More info: http://www.mediawiki.org/wiki/Extension:External_Data#Installation
include_once( "$IP/extensions/ExternalData/ExternalData.php" );

# Page Schemas
# More info: http://www.mediawiki.org/wiki/Extension:Page_Schemas#Installation
require_once( "$IP/extensions/PageSchemas/PageSchemas.php" );

# Replace Text
# More info: http://www.mediawiki.org/wiki/Extension:Replace_Text#Installation
require_once( "$IP/extensions/ReplaceText/ReplaceText.php" );

# Widgets
# Also need to do some permission setup: http://www.mediawiki.org/wiki/Extension:Widgets#Folder_permissions
# More info: http://www.mediawiki.org/wiki/Extension:Widgets#Installation
require_once( "$IP/extensions/Widgets/Widgets.php" );
$wgGroupPermissions['sysop']['editwidgets'] = true;

$srfgFormats[] = 'googlebar';
$srfgFormats[] = 'googlepie';
$htEditTabLink = false;

# Extension:ConfirmAccount
require_once("$IP/extensions/ConfirmAccount/ConfirmAccount.php");
$wgMakeUserPageFromBio = true;
$wgAutoWelcomeNewUsers = true;
$wgUseRealNamesOnly = false;
$wgAccountRequestMinWords = 25;
$wgConfirmAccountContact = true;

require_once("$IP/extensions/SemanticFormsSelect/SemanticFormsSelect.php");

require_once("$IP/extensions/Poem/Poem.php");
require_once("$IP/extensions/wikihiero/wikihiero.php");

require_once("{$IP}/extensions/Interwiki/Interwiki.php");
$wgGroupPermissions['*']['interwiki'] = false;
$wgGroupPermissions['bureaucrat']['interwiki'] = true;
$wgEnableScaryTranscluding = true;
$wgInterwikiMagic = true;
$wgHideInterlanguageLinks = false;

#require_once( "$IP/extensions/Configure/Configure.php" );
#efConfigureSetup();
#$wgConfigureEditableSettings = array();
#$wgConfigureDatabase = false;

$wgFlaggedRevsStatsAge = false;
#require_once("$IP/extensions/FlaggedRevs/FlaggedRevs.php");
#$wgGroupPermissions['sysop']['review'] = true;
$wgGroupPermissions['sysop']['autoreview'] = false;
$wgGroupPermissions['*']['writeapi'] = false;
$wgGroupPermissions['*']['viewedittab'] = false;
$wgGroupPermissions['user']['viewedittab'] = true;
$wgGroupPermissions['*']['createtalk'] = false;
$wgGroupPermissions['bot']['autoreview'] = false;
$wgGroupPermissions['editor']['autoreview'] = false;
$wgGroupPermissions['reviewer']['autoreview'] = false;
$wgGroupPermissions['autoreview']['autoreview'] = true;
$wgFlaggedRevsTags = array(
	'accuracy' => array( 'levels' => 4, 'quality' => 2, 'pristine' => 4 ),
	'depth'    => array( 'levels' => 4, 'quality' => 1, 'pristine' => 4 ),
	'style'    => array( 'levels' => 4, 'quality' => 1, 'pristine' => 4 ),
);
$wgFlaggedRevsTagsRestrictions = array(
	'accuracy' => array( 'bureaucrat' => 4, 'validate' => 3, 'review' => 1, 'autoreview' => 1 ),
	'depth'	   => array( 'bureaucrat' => 4, 'validate' => 3, 'review' => 2, 'autoreview' => 1 ),
	'style'	   => array( 'bureaucrat' => 4, 'validate' => 3, 'review' => 2, 'autoreview' => 1 ),
);

$wgFlaggedRevsAutopromote['edits'] = 500;
$wgFlaggedRevsAutopromote['totalContentEdits'] = 450; # $wgContentNamespaces edits
$wgFlaggedRevsAutopromote['uniqueContentPages'] = 200; # $wgContentNamespaces unique pages edited
$wgFlaggedRevsAutopromote['email'] = true; # user must be emailconfirmed?
$wgFlaggedRevsAutopromote['userpageBytes'] = 5000; # if userpage is needed, what is the min size?
$wgSimpleFlaggedRevsUI = true;

require_once("$IP/extensions/uniwiki/Authors/Authors.php");

$wgNamespacesWithSubpages[4] = true;
$wgExtraNamespaces[5] = "Enciklopedijos_aptarimas";
$wgNamespaceAliases['File'] = 6;
$wgNamespaceAliases['File talk'] = 7;
$wgNamespacesWithSubpages[0] = true;
$wgNamespacesWithSubpages[10] = true;
$wgNamespacesWithSubpages[12] = true;
$wgNamespacesWithSubpages[14] = true;
$wgNamespaceProtection[6]      = array( 'only-user-edit' );
$wgNamespaceProtection[10]      = array( 'only-user-edit' );
$wgNamespaceProtection[14]      = array( 'only-user-edit' );
$wgNamespaceProtection[102]      = array( 'only-user-edit' );
$wgNamespaceProtection[106]      = array( 'only-user-edit' );
$wgNamespaceProtection[108]      = array( 'only-user-edit' );
$wgNamespaceProtection[170]      = array( 'only-user-edit' );
$wgGroupPermissions['user']['only-user-edit'] = true;

#define("SRITIS", 800);
#define("SRITIS_TALK", 801);
$wgShowAuthorsNamespaces = array (NS_MAIN, NS_IMAGE, 800); # (array) Controls which namespaces this extension affects
$wgFlaggedRevsNamespaces[] = 800;

$wgExtraNamespaces[800] = "Sritis";
$wgExtraNamespaces[801] = "Srities_aptarimas";
$wgNamespaceAliases['Portal'] = 800;
$wgNamespaceAliases['Portal_talk'] = 801;
$wgNamespaceAliases['Sritis'] = 800;
$wgNamespaceAliases['Srities_aptarimas'] = 801;
$wgNamespacesWithSubpages[800] = true;
$wgNamespacesWithSubpages[801] = true;
$wgNamespacesToBeSearchedDefault[800] = true;
$smwgNamespacesWithSemanticLinks[800] = true;

$wgFlaggedRevsNamespaces[] = 802;

$wgExtraNamespaces[802] = "Naujiena";
$wgExtraNamespaces[803] = "Naujienos";
$wgNamespaceAliases['Naujiena'] = 802;
$wgNamespaceAliases['Naujienos'] = 803;
$wgNamespacesWithSubpages[802] = true;
$wgNamespacesWithSubpages[803] = true;
$wgNamespacesToBeSearchedDefault[802] = true;
$smwgNamespacesWithSemanticLinks[802] = true;
$wgNamespacesToBeSearchedDefault[803] = true;
$smwgNamespacesWithSemanticLinks[803] = true;

$wgFlaggedRevsNamespaces[] = 804;

$wgExtraNamespaces[804] = "Citata";
$wgExtraNamespaces[805] = "Citatos";
$wgNamespaceAliases['Citata'] = 804;
$wgNamespaceAliases['Citatos'] = 805;
$wgNamespacesWithSubpages[804] = true;
$wgNamespacesWithSubpages[805] = true;
$wgNamespacesToBeSearchedDefault[804] = true;
$wgNamespacesToBeSearchedDefault[805] = true;
$smwgNamespacesWithSemanticLinks[804] = true;
$smwgNamespacesWithSemanticLinks[805] = true;

$wgExtraNamespaces[806] = "JSON";
$wgExtraNamespaces[807] = "JSON aptarimas";
$wgNamespaceAliases['JSON'] = 806;
$wgNamespaceAliases['JSON aptarimas'] = 807;
$wgNamespacesWithSubpages[806] = true;
$wgNamespacesWithSubpages[807] = true;
$wgNamespacesToBeSearchedDefault[806] = false;
$wgNamespacesToBeSearchedDefault[807] = false;
$smwgNamespacesWithSemanticLinks[806] = false;
$smwgNamespacesWithSemanticLinks[807] = false;

$wgExtraNamespaces[110] = "Indeksas";
$wgExtraNamespaces[111] = "Indekso_aptarimas";
$wgNamespaceAliases['Index'] = 110;
$wgNamespaceAliases['Index_talk'] = 111;
$wgNamespaceAliases['Indeksas'] = 110;
$wgNamespaceAliases['Indekso_aptarimas'] = 111;
$wgNamespacesWithSubpages[110] = true;
$wgNamespacesWithSubpages[111] = true;
$wgNamespacesToBeSearchedDefault[110] = true;
$smwgNamespacesWithSemanticLinks[110] = true;
$wgFlaggedRevsNamespaces[] = 110;
$wgShowAuthorsNamespaces[] = 110;

$wgExtraNamespaces[112] = "Puslapis";
$wgExtraNamespaces[113] = "Puslapio_aptarimas";
$wgNamespaceAliases['Page'] = 112;
$wgNamespaceAliases['Page_talk'] = 113;
$wgNamespaceAliases['Puslapis'] = 112;
$wgNamespaceAliases['Puslapio_aptarimas'] = 113;
$wgNamespacesWithSubpages[112] = true;
$wgNamespacesWithSubpages[113] = true;
$wgNamespacesToBeSearchedDefault[112] = true;
$smwgNamespacesWithSemanticLinks[112] = true;
$wgFlaggedRevsNamespaces[] = 112;
$wgShowAuthorsNamespaces[] = 112;

$wgExtraNamespaces[90] = "Žinutė";
$wgExtraNamespaces[91] = "Žinutės_aptarimas";
$wgNamespaceAliases['Thread'] = 90;
$wgNamespaceAliases['Thread_talk'] = 91;
$wgNamespacesWithSubpages[91] = true;

$wgExtraNamespaces[92] = "Apibendrinimas";
$wgExtraNamespaces[93] = "Apibendrinimo_aptarimas";
$wgNamespaceAliases['Summary'] = 92;
$wgNamespaceAliases['Summary_talk'] = 93;
$wgNamespacesWithSubpages[93] = true;

$wgExtraNamespaces[102] = "Savybė";
$wgExtraNamespaces[103] = "Savybės_aptarimas";
$wgNamespaceAliases['Property'] = 102;
$wgNamespaceAliases['Property_talk'] = 103;

$wgExtraNamespaces[106] = "Forma";
$wgExtraNamespaces[107] = "Formos_aptarimas";
$wgNamespaceAliases['Form'] = 106;
$wgNamespaceAliases['Form talk'] = 107;

$wgExtraNamespaces[108] = "Koncepcija";
$wgExtraNamespaces[109] = "Koncepcijos_aptarimas";
$wgNamespaceAliases['Concept'] = 108;
$wgNamespaceAliases['Concept_talk'] = 109;
$wgNamespacesWithSubpages[109] = true;

$wgExtraNamespaces[170] = "Filtras";
$wgExtraNamespaces[171] = "Filtro_aptarimas";
$wgNamespaceAliases['Filter'] = 170;
$wgNamespaceAliases['Filter_talk'] = 171;

$wgExtraNamespaces[274] = "Intarpas";
$wgExtraNamespaces[275] = "Intarpo_aptarimas";
$wgNamespaceAliases['Widget'] = 274;
$wgNamespaceAliases['Widget_talk'] = 275;

$wgExtraNamespaces[420] = "Sluoksnis";
$wgExtraNamespaces[421] = "Sluoksnio_aptarimas";
$wgNamespaceAliases['Layer'] = 420;
$wgNamespaceAliases['Layer_talk'] = 421;
$wgNamespacesWithSubpages[421] = true;

$wgContentNamespaces = array (0, 102, 110, 112, 800, 802, 803, 804);

#$wgGroupPermissions['*']['edit'] = true;
#$wgGroupPermissions['*']['createpage'] = false;

$wgShowExceptionDetails = true;

#require_once("$IP/extensions/SpecialForm.php")
$wgFormTablePrefix = "form_";
$wgAutoCreateFormTable = true;
$wgFormSender = $wgPasswordSender;

#$edgDBServer['form'] = "localhost";
#$edgDBServerType['form'] = "mysql"; 
#$edgDBName['form'] = "elipstruct";
#$edgDBUser['form'] = "vartotojas";
#$edgDBPass['form'] = "AbC123";
#$edgDBFlags['form'] = DBO_NOBUFFER & DBO_TRX;
#$edgDBTablePrefix['form'] = "form_";

$edgAllowExternalDataFrom = array(
	'http://eol.org',
	'http://api.gbif.org',
    );

$edgDBServer['taxon'] = "mysql.lietuvai.lt";
$edgDBServerType['taxon'] = "mysql"; 
$edgDBName['taxon'] = "taxon";
$edgDBUser['taxon'] = "vartotojas";
$edgDBPass['taxon'] = "AbC123";
#$edgDBFlags['taxon'] = DBO_NOBUFFER & DBO_TRX;
$edgDBTablePrefix['taxon'] = "";

$edgDBServer['col2010ac'] = "mysql.lietuvai.lt";
$edgDBServerType['col2010ac'] = "mysql"; 
$edgDBName['col2010ac'] = "col2010ac";
$edgDBUser['col2010ac'] = "vartotojas";
$edgDBPass['col2010ac'] = "AbC123";
#$edgDBFlags['col2010ac'] = DBO_NOBUFFER & DBO_TRX;
$edgDBTablePrefix['col2010ac'] = "";

$edgDBServer['col2013ac'] = "mysql.lietuvai.lt";
$edgDBServerType['col2013ac'] = "mysql"; 
$edgDBName['col2013ac'] = "col2013ac";
$edgDBUser['col2013ac'] = "vartotojas";
$edgDBPass['col2013ac'] = "AbC123";
#$edgDBFlags['col2013ac'] = DBO_NOBUFFER & DBO_TRX;
$edgDBTablePrefix['col2013ac'] = "";

$edgDBServer['Paplitimas'] = "mysql.lietuvai.lt";
$edgDBServerType['Paplitimas'] = "mysql"; 
$edgDBName['Paplitimas'] = "Paplitimas";
$edgDBUser['Paplitimas'] = "vartotojas";
$edgDBPass['Paplitimas'] = "AbC123";
#$edgDBFlags['Paplitimas'] = DBO_NOBUFFER & DBO_TRX;
$edgDBTablePrefix['Paplitimas'] = "";

$edgDBServer['ITIS'] = "mysql.lietuvai.lt";
$edgDBServerType['ITIS'] = "mysql"; 
$edgDBName['ITIS'] = "ITIS";
$edgDBUser['ITIS'] = "vartotojas";
$edgDBPass['ITIS'] = "AbC123";
#$edgDBFlags['Paplitimas'] = DBO_NOBUFFER & DBO_TRX;
$edgDBTablePrefix['ITIS'] = "";

$edgDBServer['base'] = "mysql.lietuvai.lt";
$edgDBServerType['base'] = "mysql"; 
$edgDBName['base'] = "base";
$edgDBUser['base'] = "vartotojas";
$edgDBPass['base'] = "AbC123";
#$edgDBFlags['base'] = DBO_NOBUFFER & DBO_TRX;
$edgDBTablePrefix['base'] = "";

$edgDBServer['base2'] = "mysql.lietuvai.lt";
$edgDBServerType['base2'] = "mysql"; 
$edgDBName['base2'] = "base2";
$edgDBUser['base2'] = "vartotojas";
$edgDBPass['base2'] = "AbC123";
#$edgDBFlags['base2'] = DBO_NOBUFFER & DBO_TRX;
$edgDBTablePrefix['base2'] = "";

$edgDBServer['wikidata'] = "mysql.lietuvai.lt";
$edgDBServerType['wikidata'] = "mysql"; 
$edgDBName['wikidata'] = "wikidata";
$edgDBUser['wikidata'] = "vartotojas";
$edgDBPass['wikidata'] = "AbC123";
#$edgDBFlags['wikidata'] = DBO_NOBUFFER & DBO_TRX;
$edgDBTablePrefix['wikidata'] = "";

$edgDBServer['ggetree'] = "mysql.lietuvai.lt";
$edgDBServerType['ggetree'] = "mysql"; 
$edgDBName['ggetree'] = "ggetree";
$edgDBUser['ggetree'] = "vartotojas";
$edgDBPass['ggetree'] = "AbC123";
#$edgDBFlags['ggetree'] = DBO_NOBUFFER & DBO_TRX;
$edgDBTablePrefix['ggetree'] = "";

$edgDBServer['geoname'] = "mysql.lietuvai.lt";
$edgDBServerType['geoname'] = "mysql"; 
$edgDBName['geoname'] = "geoname";
$edgDBUser['geoname'] = "vartotojas";
$edgDBPass['geoname'] = "AbC123";
#$edgDBFlags['geoname'] = DBO_NOBUFFER & DBO_TRX;
$edgDBTablePrefix['geoname'] = "";

$edgDBServer['enc'] = "mysql.lietuvai.lt";
$edgDBServerType['enc'] = "mysql"; 
$edgDBName['enc'] = "enciklopedija";
$edgDBUser['enc'] = "vartotojas";
$edgDBPass['enc'] = "AbC123";
#$edgDBFlags['enc'] = DBO_NOBUFFER & DBO_TRX;
$edgDBTablePrefix['enc'] = "";

$wgGroupPermissions['showeform']['showform'] = true;

require_once("$IP/extensions/timeline/EasyTimeline.php"); // Add EasyTimeline extension
putenv("GDFONTPATH=/usr/share/fonts/TTF");
#$wgTimelineSettings->fileBackend = "/var/www/htdocs/images/timeline";
#$wgTimelineSettings->ploticusCommand = "/usr/bin/ploticus"; // /usr/share/ploticus
#$wgTimelineSettings->ploticusCommand = "/usr/local/bin/pl";
$wgTimelineSettings->ploticusCommand = "/usr/share/ploticus";
#$wgTimelineSettings->perlCommand = "/usr/bin/perl";

require_once( "$IP/extensions/OpenSearchXml/OpenSearchXml.php" );
require_once("$IP/extensions/TitleKey/TitleKey.php");

require( "$IP/extensions/DynamicSidebar/DynamicSidebar.php" );
// Enable debugging
#$wgDebugLogGroups["dynamic-sidebar"] = "/tmp/sidebar-debug.txt";
 
// Allow users to create their own custom sidebars under User:<username>/Sidebar
// Default: true
$wgDynamicSidebarUseUserpages = true;
 
// Allow group sidebars under MediaWiki:Sidebar/Group:<group>
// Default: true
$wgDynamicSidebarUseGroups = true;
 
// Allow category based sidebars under MediaWiki:Sidebar/Category:<category>
// Default: true
$wgDynamicSidebarUseCategories = true;

# Math modulio konfiguracija, Audrius Meskauskas
#$wgTexvc = '/var/www/enciklopedija/w/extensions/Math/math/texvc';
#require_once("$IP/extensions/Math/Math.php");

# Math
$wgTexvc = '$IP/extensions/Math/math/texvc';
require_once("$IP/extensions/Math/Math.php");

require_once( "$IP/extensions/ProofreadPage/ProofreadPage.php" );

$wgProofreadPageNamespaceIds = array(
    'index' => 110,
    'page' => 112
);

#require_once($IP.'/extensions/ManualSitemap/ManualSitemap.php');
# Notify all web sites you want about the update of sitemap
$sitemap=urlencode('http://lietuvai.lt/sitemap/sitemap-index-enciklopedija-enc.xml');
$ManualSitemap_Notify=array();
$ManualSitemap_Notify[] = 'http://www.google.com/webmasters/sitemaps/ping?sitemap='.$sitemap;
$ManualSitemap_Notify[] = 'http://search.yahooapis.com/SiteExplorerService/V1/ping?sitemap='.$sitemap;
$ManualSitemap_Notify[] = 'http://webmaster.live.com/ping.aspx?sitemap='.$sitemap;
$ManualSitemap_Notify[] = 'http://api.moreover.com/ping?u='.$sitemap;
$ManualSitemap_Notify[] = 'http://submissions.ask.com/ping?sitemap='.$sitemap;

# Exclude pages from sitemap (value "1" means "exclude"):

#Please refer to
#http://www.mediawiki.org/wiki/Help:Namespaces
#for more detailed explanation
$ManualSitemap_Exclude=array(
        NS_MAIN =>           '0',       NS_TALK =>           '0',
        NS_USER =>           '0',       NS_USER_TALK =>      '0',
        NS_PROJECT =>        '0',       NS_PROJECT_TALK =>   '0',
        NS_IMAGE =>          '0',       NS_IMAGE_TALK =>     '0',
        NS_MEDIAWIKI =>      '1',       NS_MEDIAWIKI_TALK => '1',
        NS_TEMPLATE =>       '1',       NS_TEMPLATE_TALK =>  '1',
        NS_HELP =>           '0',       NS_HELP_TALK =>      '0',
        NS_CATEGORY =>       '0',       NS_CATEGORY_TALK =>  '0',
        800 => '0', 801 => '0',
        802 => '0', 803 => '0',
        804 => '0', 805 => '1',
        110 => '0', 111 => '0',
        112 => '0', 113 => '0',
        90 => '0', 91 => '0',
        92 => '0', 93 => '0',
        102 => '0', 103 => '0',
        106 => '0', 107 => '0',
        108 => '1', 109 => '1',
        170 => '1', 171 => '1',
        274 => '1', 275 => '1',
        420 => '1', 421 => '1',
        828 => '0', 829 => '0',
);
$wgSitemapNamespaces=array(
        NS_MAIN, NS_PROJECT, NS_IMAGE,  800, NS_CATEGORY, 110 , 112, 802, 803, 804  
);
$wgSitemapNamespacesPriorities=array(
        NS_MAIN =>'1.0', NS_PROJECT =>'1.0', NS_IMAGE =>'1.0',  800 => '1.0', NS_CATEGORY => '1.0', 110 => '1.0' , 112 => '1.0', 802 =>'1.0', 803 =>'1.0', 804 =>'1.0'  
);

$ManualSitemap_ServerBase = "http://lietuvai.lt";
#With that all sitemap entries get this as their base url. If not set $wgServer is used

require_once( "$IP/extensions/ReplaceSet/ReplaceSet.php" );

require_once("$IP/extensions/ABC/ABC.php");
$abcPath = "$IP/phase3/abc";
$abcURL = "$wgScriptPath/phase3/abc";
$abcm2ps = "/usr/local/bin/abcm2ps";
$abcps2pdf = "/usr/local/bin/ps2pdf14";


$wgJobRunRate = 0.01;

$wgThumbLimits = array(
        120,
        150,
        180,
        200,
        250,
        300,
        600,
        800,
      1200,
      1600
);

$wgFileExtensions[] = 'djvu';
$wgDjvuDump = "/usr/bin/djvudump";
$wgDjvuRenderer = "/usr/bin/ddjvu";
$wgDjvuToXML = "/usr/bin/djvutoxml";
$wgDjvuTxt = "/usr/bin/djvutxt";
$wgDjvuPostProcessor = "ppmtojpeg";
$wgDjvuOutputExtension = 'jpg';

#require_once( "$IP/extensions/ExternalLinks/ExternalLinks.php" );
#$wgELuserRight = 'sysop'; // default: edit
#$wgELtableClass = "wikitable sortable alternate"; // default: "wikitable sortable"
#$wgELpageLinkClass = "targetBlank";
#$wgELmaxPerPage = 100;  // default: 200
#$wgELenableSessionStoring = true; // default: false (requires a new date row 'el_last_validated' in table 'externallinks')
#$wgELvalidationMode = 'cURL'; // default: none (disabled)
#$wgELvalidationMaxPerPage = '50'; // default: 25
#$wgELtoolboxLink = true; // default: false

require_once( "$IP/extensions/SmoothGallery/SmoothGallery.php" );
$wgSmoothGalleryExtensionPath = "$wgScriptPath/extensions/smoothgallery";
$wgSmoothGalleryDelimiter = "\n";

require_once ( 'extensions/LabeledSectionTransclusion/lst.php' );
require_once ( 'extensions/LabeledSectionTransclusion/lsth.php' );

$wgFileExtensions[] = 'csv';

# Lucene configuration by Audrius Meskauskas
#$wgDisableInternalSearch = true;
$wgDisableTextSearch = true;
#$wgSearchType = 'LuceneSearch';
#$wgLuceneHost = '127.0.0.1'; #IP address of server
#$wgLucenePort = 8123;
#$wgVectorUseSimpleSearch=true;
require_once( "$IP/extensions/MWSearch/MWSearch.php" );
 
# comment this out if you are using the old version 2.0
# (MUST be AFTER the require_once!)
#$wgLuceneSearchVersion = 2.1;

#ini_set('pcre.backtrack_limit',10000000); //10million

require_once( "$IP/extensions/AntiBot/AntiBot.php" );

#require_once( "extensions/DataTable/DataTable.php" );

$wgAutoloadClasses['KwiDatabase2'] = "$IP/extensions/KwiDatabase2.php"; 
require_once( "$IP/extensions/KwikiData.php" );

#require_once("$IP/extensions/ContributionScores/ContributionScores.php");
#$wgContribScoreIgnoreBots = true;          // Exclude Bots from the reporting - Can be omitted.
#$wgContribScoreIgnoreBlockedUsers = true;  // Exclude Blocked Users from the reporting - Can be omitted.
#$wgContribScoresUseRealName = true;        // Use real user names when available - Can be omitted. Only for MediaWiki 1.19 and later.
#$wgContribScoreDisableCache = false;       // Set to true to disable cache for parser function and inclusion of table.

//Each array defines a report - 7,50 is "past 7 days" and "LIMIT 50" - Can be omitted.
$wgContribScoreReports = array(
    array(7,50),
    array(30,50),
    array(60,50),
    array(0,50));

require_once("$IP/extensions/ExpandTemplates/ExpandTemplates.php");
require_once( "$IP/extensions/TemplateSandbox/TemplateSandbox.php" );
require_once( "$IP/extensions/CodeEditor/CodeEditor.php" );
require_once("$IP/extensions/SyntaxHighlight_GeSHi/SyntaxHighlight_GeSHi.php");
$wgSyntaxHighlightDefaultLang = "c";

# Scribunto
require_once( "$IP/extensions/Scribunto/Scribunto.php" );
$wgScribuntoDefaultEngine = 'luastandalone';
$wgScribuntoUseGeSHi = true;
$wgScribuntoUseCodeEditor = true;

$wgExtraNamespaces[828] = "Modulis";
$wgExtraNamespaces[829] = "Modulio_aptarimas";
$wgNamespaceAliases['Module'] = 828;
$wgNamespaceAliases['Module_talk'] = 829;
$wgNamespacesWithSubpages[829] = true;
$wgFlaggedRevsNamespaces[] = 828;
$wgShowAuthorsNamespaces[] = 828;


$wgExpensiveParserFunctionLimit = 249;

require_once( "$IP/extensions/DismissableSiteNotice/DismissableSiteNotice.php" );

require_once("$IP/extensions/Collection/Collection.php");
#$wgCollectionPODPartners = false;
$wgGroupPermissions['user']['collectionsaveascommunitypage'] = true;
$wgGroupPermissions['user']['collectionsaveasuserpage']      = true;
$wgCollectionArticleNamespaces[] = 800;
$wgCollectionArticleNamespaces[] = 801;
$wgCollectionArticleNamespaces[] = 802;
$wgCollectionArticleNamespaces[] = 803;
$wgCollectionArticleNamespaces[] = 804;
$wgCollectionArticleNamespaces[] = 112;
$wgCollectionArticleNamespaces[] = 113;
$wgNamespaceRobotPolicies = array( 805 => 'noindex,nofollow' );

$wgAllowImageTag = true;
$wgAllowExternalImages = false;
$wgEnableImageWhitelist = true;
$wgAllowExternalImagesFrom = array( 'http://ogc.gbif.org/' );

require_once( "$IP/extensions/TemplateData/TemplateData.php" );

#require_once("$IP/extensions/VisualEditor/VisualEditor.php");
 
// OPTIONAL: Enable VisualEditor in other namespaces
// By default, VE is only enabled in NS_MAIN and NS_USER
//$wgVisualEditorNamespaces[] = NS_PROJECT;
 
// Enable by default for everybody
#$wgDefaultUserOptions['visualeditor-enable'] = 1;
 
// Don't allow users to disable it
#$wgHiddenPrefs[] = 'visualeditor-enable';

require_once("$IP/extensions/DoubleWiki/DoubleWiki.php");

$wgFileExtensions[] = 'zip';

require_once("$IP/extensions/PagedTiffHandler/PagedTiffHandler.php");


$wgTiffIdentifyRejectMessages = array(
        '/^identify: Compression algorithm does not support random access/',
        '/^identify: Old-style LZW codes, convert file/',
        '/^identify: Sorry, requested compression method is not configured/',
        '/^identify: ThunderDecode: Not enough data at scanline/',
        '/^identify: .+?: Read error on strip/',
        '/^identify: .+?: Can not read TIFF directory/',
        '/^identify: Not a TIFF/',
);

$wgTiffIdentifyBypassMessages = array(
        '/^identify: .*TIFFReadDirectory/',
        '/^identify: .+?: unknown field with tag .+? encountered/'
);

// Path to identify
$wgImageMagickIdentifyCommand = '/usr/bin/identify';
// Use exiv2?
$wgTiffUseExiv = false;
// Path to exiv2
$wgTiffExivCommand = '/usr/bin/exiv2';
// Use vips
$wgTiffUseVips = false;
// Path to vips
$wgTiffVipsCommand = '/usr/bin/vips';
// Maximum number of embedded files in tiff image
$wgTiffMaxEmbedFiles = 10000;
// Maximum size of meta data
$wgTiffMaxMetaSize = 64*1024; // 64kB


// TTL of Cacheentries for Errors
$wgTiffErrorCacheTTL = 84600;

#$wgMaxShellMemory = 614400;
$wgMaxShellFileSize = 3072000;

$wgGroupPermissions['sysop']['deletelogentry'] = true;
$wgGroupPermissions['sysop']['deleterevision'] = true;
$wgGroupPermissions['oversight']['hideuser'] = true;
$wgGroupPermissions['oversight']['suppressrevision'] = true;
$wgGroupPermissions['oversight']['suppressionlog'] = true;



##Start --------------------------------------- MsUpload
$wgMSU_ShowAutoKat = true;     #autocategorisation
$wgMSU_CheckedAutoKat = true;  #checkbox: checked = true/false
$wgMSU_debug = false;
$wgMSU_ImgParams = '400px';     #default max-size for image insert
$wgMSU_UseDragDrop = true;      #show Drag&Drop Area?
require_once("$IP/extensions/MsUpload/msupload.php");
##End  --------------------------------------- MsUpload



require_once( "$IP/extensions/GoogleSiteSearch/GoogleSiteSearch.php" );
 
$wgGoogleSiteSearchCSEID = '013068630876999152442:vb8iajuzqba';
$wgGoogleSiteSearchOnly = true;
$wgGoogleSiteSearchCharset = 'ISO 8859-4';

require_once( "$IP/extensions/GoogleSearch/GoogleSearch.php" );
$wgGoogleSearchCSECode = '013068630876999152442:vb8iajuzqba';

#$wgFooterIcons['poweredby']['myicon'] = array(
#	"src" => "http://www.hey.lt/count.php?id=elip", // you may also use a direct path to the source, e.g. "http://example.com/my/custom/path/to/MyCustomLogo.png"
#	"url" => "http://www.hey.lt/details.php?id=elip",
#	"alt" => "Skaitliukas",
#);

#require_once( "$IP/extensions/WebserviceJson/WebserviceJson.php" );

#$wgReadOnly = 'Šiuo metu vykdomi veiksmai, dėl kuris sistema užrakinta duomens įrašymui.';

require_once( "$IP/extensions/HeaderFooter/HeaderFooter.php" );

$wgMaxArticleSize = 4096;
#$wgEnableAPI = false;

$wgShowSQLErrors = true;
$wgDebugDumpSql  = true;

